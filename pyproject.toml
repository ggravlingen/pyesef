[build-system]
requires = ["setuptools==69.1.1", "wheel~=0.42.0", "toml"]
build-backend = "setuptools.build_meta"

[project]
name        = "pyesef"
version     = "1.0.2"
license     = {text = "MIT"}
description = "Parse financial statements in XBRL format"
authors     = [
    {name = "ggravlingen", email = "no@email.com"}
]
keywords    = ["esef", "statement", "financial"]
requires-python = ">=3.11.0"
classifiers=[
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Financial and Insurance Industry",
]
dependencies    = [
  "arelle-release==2.23.13",
  "colorlog==6.8.2",
  "jstyleson==0.0.2",
  "lxml==5.1.0",
  "pandas==2.2.1",
  "requests==2.31.0",
  "tinycss2==1.2.1",
]
[project.optional-dependencies]
dev = [
  "black==24.2.0",
  "coverage==7.4.3",
  "mypy==1.8.0",
  "pre-commit==3.5.0",
  "pylint==3.0.2",
  "pytest==8.0.2",
  "pytest-cov==4.1.0",
  "pandas-stubs==2.2.0.240218",
  "pytest-timeout==2.2.0",
  "ruff==0.3.2",
  "types-requests==2.31.0.20240218",
]

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
include-package-data = true
packages = ["pyesef"]

[tool.setuptools.package-data]
"pyesef" = ["py.typed"]

[tool.black]
target-version = ["py311"]

[tool.pylint.MASTER]
py-version = "3.11"

[tool.pylint.BASIC]
class-const-naming-style = "any"

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "broad-except",
  "too-many-instance-attributes",
  "too-many-return-statements",
  "too-few-public-methods",
  "too-many-locals",
  # It's easier to use f-string than lazy % formatting
  "logging-fstring-interpolation",
]

[tool.pylint.REPORTS]
score = false

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.EXCEPTIONS]
overgeneral-exceptions = [
    "builtins.BaseException",
    "builtins.Exception",
]

[tool.pylint.TYPING]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
norecursedirs = [
    ".git",
    "testing_config",
]

[tool.ruff]
exclude = []

target-version = "py311"

lint.select = [
    "B007", # Loop control variable {name} not used within loop body
    "B014", # Exception handler with duplicate exception
    "C",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "I",  # isort
    "ICN001", # import concentions; {name} should be imported as {asname}
    "PGH004",  # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "T20",  # flake8-print
    "UP",  # pyupgrade
    "W",  # pycodestyle
]

# Same as Black.
line-length = 88

lint.ignore = [
  # One of these is to be disabled..
  "D213", # See https://github.com/charliermarsh/ruff/issues/2281
  #"D212", # See https://github.com/charliermarsh/ruff/issues/2281
  "D203", # See https://github.com/charliermarsh/ruff/issues/2281
  #"D211", # See https://github.com/charliermarsh/ruff/issues/2281
  # keep-runtime-annotations
  'UP006', # Non PEP585 annotations
  'UP007', # Non PEP604 annotations
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.pydocstyle]
convention = 'pep257'

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
forced-separate = [
  "tests",
]
known-first-party = [
  "pyesef",
  "tests",
]

[tools.mypy]
python_version = "3.11"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
strict = true

[[tool.mypy.overrides]]
module = [
  "arelle.*",
  "jstyleson.*",
]
ignore_missing_imports = true

